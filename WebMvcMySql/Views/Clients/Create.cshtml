@using System.ComponentModel.DataAnnotations;
@model WebMvcMySql.Models.Client

@{
    ViewData["Title"] = "Cadastro";
}

<h2 class="mb-5">Cadastro de Cliente</h2>

<section class="pb-5">
    <form asp-action="Create" class="col-12 d-flex flex-column flex-wrap pb-5">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="d-flex flex-wrap gap-2 bg-white p-3 shadow-sm rounded-5 border-0 overflow-hidden">
            <h5 class="col-12 pb-3 border-bottom">Geral</h5>
            <div class="form-group col-12 col-md-3">
                <label asp-for="TypePerson" class="control-label"></label>
                <select asp-for="TypePerson" class="form-select" title="Selecione o tipo de Pessoa.">
                    <option value="">Selecione</option>
                    @foreach (var item in Enum.GetValues(typeof(TypePerson)))
                    {

                        <option value="@item.ToString()">@((item.GetType().GetMember(item.ToString())[0].GetCustomAttributes(typeof(DisplayAttribute), false)[0] as DisplayAttribute).Name)</option>
                    }
                </select>
                <span asp-validation-for="TypePerson" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-8">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" placeholder="Digite o Nome" title="Nome completo ou Razão Social do Cliente." />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-6 col-lg-3">
                <label asp-for="CPF_CNPJ" class="control-label"></label>
                <input asp-for="CPF_CNPJ" class="form-control cpf_cnpj-input" placeholder="Digite o CPF ou CNPJ" title="Insira o CPF ou o CNPJ do Cliente." />
                <span asp-validation-for="CPF_CNPJ" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-5 col-lg-3">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" placeholder="Digite o E-mail" title="E-mail do Cliente." />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-6 col-lg-3">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" id="phone-input" placeholder="(00) 00000-0000" title="Telefone do Cliente." />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-5 col-lg-2">
                <label asp-for="RegistrationDate" class="control-label"></label>
                <input asp-for="RegistrationDate" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled />
                <span asp-validation-for="RegistrationDate" class="text-danger"></span>
            </div>
        </div>
        <div class="d-flex flex-wrap gap-2 bg-white p-3 mt-4 shadow-sm rounded-5 border-0 overflow-hidden">
            <h5 class="col-12 pb-3 border-bottom">Informações Pessoais</h5>
            <div class="form-group col-12 col-md-5 col-lg-2" id="gender-group">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="Gender" class="form-select" title="Selecione o gênero do Cliente.">
                    <option value="">Selecione</option>
                    @foreach (var item in Enum.GetValues(typeof(Gender)))
                    {
                        <option value="@item.ToString()">
                            @{
                                var memberInfo = item.GetType().GetMember(item.ToString())[0];
                                if (memberInfo != null)
                                {
                                    var displayAttribute = memberInfo.GetCustomAttributes(typeof(DisplayAttribute), false)[0] as DisplayAttribute;
                                    if (displayAttribute != null)
                                    {
                                        @displayAttribute.Name
                                    }
                                }
                            }
                        </option>
                    }
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group col-12 col-md-6 col-lg-2" id="birthdate-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" class="form-control" title="Data de nascimento do Cliente." />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check form-switch col-auto mb-2 px-4" id="StateDocIndividual-group">
                <label class="form-check-label d-flex flex-column-reverse align-items-start">
                    <input class="form-check-input ms-1" role="switch" asp-for="IsStateDocIndividual" /> @Html.DisplayNameFor(model => model.IsStateDocIndividual)
                </label>
            </div>
            <div class="form-group col-12 col-md-3">
                <label asp-for="StateDoc" class="control-label"></label>
                <input asp-for="StateDoc" class="form-control" placeholder="Inscrição Estadual do Cliente" title="Inscrição Estadual do Cliente, selecionar Isento caso assim for." />
                <span asp-validation-for="StateDoc" class="text-danger"></span>
            </div>
            <div class="form-group form-check col-auto mt-1 align-self-center">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsFree" /> @Html.DisplayNameFor(model => model.IsFree)
                </label>
            </div>
        </div>
        <div class="d-flex flex-wrap bg-white p-3 mt-4 shadow-sm rounded-5 border-0 overflow-hidden">
            <h5 class="col-12 pb-3 border-bottom">Situação do Cliente</h5>
            <div class="form-group form-check col-12 ms-2 mb-2 align-self-end">
                <label class="form-check-label" title="Bloqueio o acesso do Cliente na sua Loja.">
                    <input class="form-check-input" asp-for="IsBlocked" title="Bloqueio o acesso do Cliente na sua Loja." /> @Html.DisplayNameFor(model => model.IsBlocked)
                </label>
            </div>
        </div>
        <div class="d-flex flex-wrap gap-2 bg-white p-3 mt-4 shadow-sm rounded-5 border-0 overflow-hidden">
            <h5 class="col-12 pb-3 border-bottom">Senha de Acesso</h5>
            <div class="password-wrapper col-12 d-flex flex-wrap gap-2">
                <div class="form-group col-12 col-md-5 col-lg-3 position-relative">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" placeholder="Digite a senha" title="Cadastre a senha de acesso do seu Cliente." />
                    <span type="button" class="password-icon"></span>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group col-12 col-md-5 col-lg-3 position-relative">
                    <label asp-for="ConfirmPassword" class="control-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirme a Senha" />
                    <span type="button" class="password-icon"></span>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 d-flex mt-4 mb-3">
                <hr />
                <div class="col-auto px-1 d-flex">
                    <a role="button" class="btn btn-outline-secondary border-0 px-4 d-flex align-items-center" asp-action="Index">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-circle me-2" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z" />
                        </svg>
                        Voltar
                    </a>
                </div>
                <div class="col-auto btn btn-warning d-flex align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle me-2" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                    </svg>
                    <input type="submit" value="Adicionar" class="btn p-0 border-0" />
                </div>
            </div>
        </div>
    </form>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js" integrity="sha512-0XDfGxFliYJPFrideYOoxdgNIvrwGTLnmK20xZbCAvPfLGQMzHUsaqZK8ZoH+luXGRxTrS46+Aq400nCnAT0/w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        $(document).ready(function () {

            $("form").on("submit", function (event) {
                event.preventDefault(); // impedir que o formulário seja enviado por padrão

                if ($(this).valid()) { // verifica se o formulário é válido
                    this.submit(); // se válido, o formulário é submetido
                } else {
                    $("span.text-danger").show(); // se não, mostra mensagem de erro
                }
            });

            // obtém as referências aos elementos HTML
            var isStateDocIndividual = $("#IsStateDocIndividual");
            var typePerson = $("#TypePerson");
            var stateDoc = $("#StateDoc");

            // Esconde o input de gênero, data de nascimento por padrão e switch Inscrição Estadual
            if (!typePerson.val() === 'Individual') {
                $('#gender-group,#birthdate-group,#StateDocIndividual-group').hide();
            }

            //MASCARAS DO FORMULÁRIO
            //Phone
            $('#phone-input').mask('(00) 00000-0000');
            //CPF mascara - padrão
            $('input#CPF_CNPJ').mask('000.000.000-00');

            //Escuta mudança no select Tipo de Pessoa
            $('#TypePerson').change(function () {
                let selectedValue = $(this).val();

                if (selectedValue === 'Individual') {
                    $('#gender-group').show();
                    $('#birthdate-group').show();
                    $('#StateDocIndividual-group').show();
                    stateDoc.prop("disabled", true);
                    $('#IsFree').prop("disabled", true);
                    //CPF mascara
                    $('input#CPF_CNPJ').mask('000.000.000-00');
                } else {
                    $('#gender-group').hide();
                    $('#birthdate-group').hide();
                    $('#StateDocIndividual-group').hide();
                    stateDoc.prop("disabled", false);
                    $('#IsFree').prop("disabled", false);
                    //CNPJ mascara
                    $('input#CPF_CNPJ').mask('000.000.000/0000-00');
                }

            });
            //Escuta mudança no checkbox Isento
            isStateDocIndividual.change(function () {
                if (!isStateDocIndividual.is(':checked')) {
                    // desativa o campo StateDoc
                    stateDoc.val("");
                    stateDoc.prop("disabled", true);
                    $('#IsFree').prop("disabled", true);
                } else {
                    // caso contrário, habilita o campo StateDoc
                    stateDoc.prop("disabled", false);
                    $('#IsFree').prop("disabled", false);

                }
            });
            //Escuta mudança no checkbox Isento
            $('#IsFree').change(function () {
                if ($('#IsFree').is(':checked')) {
                    // desativa o campo StateDoc
                    stateDoc.val("");
                    stateDoc.prop("disabled", true);
                } else {
                    // caso contrário, habilita o campo StateDoc
                    stateDoc.prop("disabled", false);
                }
            });


            //Mostra e esconde caracteres do input de senha ao clicar no botão
            $(".password-wrapper").on("click", ".password-icon", function () {
                let passwordInput = $(this).prev("input");
                if (passwordInput.attr("type") === "password") {
                    passwordInput.attr("type", "text");
                    $(this).addClass("show");
                } else {
                    passwordInput.attr("type", "password");
                    $(this).removeClass("show");
                }
            });


        });
    </script>
}
